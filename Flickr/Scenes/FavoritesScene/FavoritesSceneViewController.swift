//
//  FavoritesSceneViewController.swift
//  Flickr
//
//  Created by Артур Кулик on 02.06.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoritesSceneDisplayLogic: AnyObject {
    func receivePhotos(viewModel: FavoritesScene.Database.ViewModel)
}

class FavoritesSceneViewController: UIViewController, FavoritesSceneDisplayLogic {
    var interactor: FavoritesSceneBusinessLogic?
    var router: (NSObjectProtocol & FavoritesSceneRoutingLogic & FavoritesSceneDataPassing)?
    @IBOutlet private var collectionViewContainer: UIView!
    
    let collectionView = PhotoCollectionViewController(collectionViewLayout: UICollectionViewLayout(), layoutSize: .large)
    
    override func viewDidLoad() {
        super.viewDidLoad()
        configureDependencies()
        setupUI()
        photoSelectionCallbackObserver()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        loadPhotos()
    }
    
    // MARK: - Protocol methods
    
    func receivePhotos(viewModel: FavoritesScene.Database.ViewModel) {
        collectionView.display(photos: viewModel.photos)
    }
    
    // MARK: - Requests to interactor
    
    func loadPhotos() {
        interactor?.fetchPhotos()
    }
    
    // MARK: - Bar button actions
    
    @objc private func leftBarButtonItemAction(_ sender: UIButton) {
        collectionView.changeLayout(to: .large)
    }
    
    @objc private func leftSecondaryBarButtonItemAction(_ sender: UIButton) {
        collectionView.changeLayout(to: .small)
    }
    
    // MARK: - Other
    
    private func photoSelectionCallbackObserver() {
        collectionView.didSelectPhoto = { [weak self] photo in
            guard let self else { return }
            self.interactor?.putInDataStore(photo: photo)
            self.router?.routeToPhotoEditorScene()
        }
    }
    
    func configureDependencies() {
        ConfiguratorsLibrary.favoritesScene.configure(self)
    }
}

extension FavoritesSceneViewController {
    func setupUI() {
        addCollectionView()
        setupNavigationBar()
    }
    
    func setupNavigationBar() {
        let leftBarButton = UIButton(frame: CGRect(x: 0, y: 0, width: 40, height: 40))
        leftBarButton.setImage(UIImage(systemName: "list.bullet"), for: .normal)
        
        let leftSecondarytBarButton = UIButton(frame: CGRect(x: 0, y: 0, width: 40, height: 40))
        leftSecondarytBarButton.setImage(UIImage(systemName: "rectangle.grid.3x2"), for: .normal)
        
        let barButton = UIBarButtonItem(customView: leftBarButton)
        let secondarybarButton = UIBarButtonItem(customView: leftSecondarytBarButton)
        leftBarButton.addTarget(self, action: #selector(leftBarButtonItemAction), for: .touchUpInside)
        leftSecondarytBarButton.addTarget(self, action: #selector(leftSecondaryBarButtonItemAction), for: .touchUpInside)
        
        self.navigationItem.leftBarButtonItems = [barButton, secondarybarButton]
    }
    
    private func addCollectionView() {
        addChild(collectionView)
        collectionViewContainer.addSubview(collectionView.view)
        collectionView.didMove(toParent: self)
        collectionView.view.translatesAutoresizingMaskIntoConstraints = false
        collectionView.view.equalConstraint(to: collectionViewContainer)
    }
}
