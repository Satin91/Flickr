//
//  FavoritesSceneViewController.swift
//  Flickr
//
//  Created by Артур Кулик on 02.06.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoritesSceneDisplayLogic: AnyObject {
    func displaySomething(viewModel: FavoritesScene.Database.ViewModel)
    func fetchCompleted(viewModel: FavoritesScene.Database.ViewModel)
}

class FavoritesSceneViewController: UIViewController, FavoritesSceneDisplayLogic {
    var interactor: FavoritesSceneBusinessLogic?
    var router: (NSObjectProtocol & FavoritesSceneRoutingLogic & FavoritesSceneDataPassing)?
    
    let collectionView = PhotoCollectionViewController(collectionViewLayout: UICollectionViewLayout(), layoutSize: .large)
    @IBOutlet private var collectionViewContainer: UIView!
    
    @IBAction private func leftBarButtonItemAction(_ sender: UIButton) {
        print("Change layout to large")
        collectionView.changeLayout(to: .large)
    }
    
    @IBAction private func centerBarButtonItemAction(_ sender: UIButton) {
        print("Change layout to medium")
        collectionView.changeLayout(to: .medium)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        doSomething()
        //        doSomethingElse()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        loadPhotos()
    }
    
    func doSomething() {
        let request = FavoritesScene.Database.Request(type: RealmPhotoModel.self)
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: FavoritesScene.Database.ViewModel) {
        // nameTextField.text = viewModel.name
    }
    
    func loadPhotos() {
        interactor?.fetchObjectsFromDatabase(request: FavoritesScene.Database.Request(type: RealmPhotoModel.self))
    }
    
    func fetchCompleted(viewModel: FavoritesScene.Database.ViewModel) {
        collectionView.display(photos: viewModel.photos)
    }
}

extension FavoritesSceneViewController {
    func setupUI() {
        configureDependencies()
        addCollectionView()
    }
    
    func configureDependencies() {
        ConfiguratorsLibrary.favoritesScene.configure(self)
    }
    
    private func addCollectionView() {
        addChild(collectionView)
        collectionViewContainer.addSubview(collectionView.view)
        collectionView.didMove(toParent: self)
        collectionView.view.translatesAutoresizingMaskIntoConstraints = false
        collectionView.view.equalConstraint(to: collectionViewContainer)
    }
}
