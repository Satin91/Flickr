//
//  FavoritesSceneViewController.swift
//  Flickr
//
//  Created by Артур Кулик on 02.06.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FavoritesSceneDisplayLogic: AnyObject {
    func displaySomething(viewModel: FavoritesScene.Something.ViewModel)
}

class FavoritesSceneViewController: UIViewController, FavoritesSceneDisplayLogic {
    var interactor: FavoritesSceneBusinessLogic?
    var router: (NSObjectProtocol & FavoritesSceneRoutingLogic & FavoritesSceneDataPassing)?
    
    let collectionView = PhotoCollectionViewController(collectionViewLayout: UICollectionViewLayout())
    @IBOutlet private var collectionViewContainer: UIView!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = FavoritesSceneInteractor()
        let presenter = FavoritesScenePresenter()
        let router = FavoritesSceneRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
//        doSomethingElse()
    }

    func doSomething() {
        let request = FavoritesScene.Something.Request()
        interactor?.doSomething(request: request)
    }

    func displaySomething(viewModel: FavoritesScene.Something.ViewModel) {
        // nameTextField.text = viewModel.name
    }
}

extension FavoritesSceneViewController {
    func setupUI() {
        addCollectionView()
    }
    
    private func addCollectionView() {
        addChild(collectionView)
        collectionViewContainer.addSubview(collectionView.view)
        collectionView.didMove(toParent: self)
        collectionView.view.translatesAutoresizingMaskIntoConstraints = false
        collectionView.view.equalConstraint(to: collectionViewContainer)
        collectionView.itemsPerLine = 1
        collectionView.verticalSpacing = 22
    }
}
